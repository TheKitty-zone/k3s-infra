---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rimgo
  namespace: flux-system
spec:
  chart:
    spec:
      chart: app-template
      reconcileStrategy: Revision
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      version: '>=1.0.0'
  interval: 1h0m0s
  releaseName: rimgo
  targetNamespace: selfhosted
  values:
    image:
      # -- image repository
      repository: codeberg.org/video-prize-ranch/rimgo 
      # -- image pull policy
      pullPolicy: Always
      # -- image tag
      # this example is not automatically updated, so be sure to use the latest image
      tag: latest

    controller:
      strategy:
      rollingUpdate:
        # -- Set deployment RollingUpdate max unavailable
        unavailable: 1
        # -- Set deployment RollingUpdate max surge
        surge: 2

      replicas: 3

    configMaps:
      config:
        # -- Enables or disables the configMap
        enabled: true
        # -- Labels to add to the configMap
        labels: {}
        # -- Annotations to add to the configMap
        annotations: {}
        # -- configMap data content. Helm template enabled.
        data:
          .env: |
            ADDRESS=0.0.0.0
            PORT=3000
            FIBER_PREFORK=false
            IMGUR_CLIENT_ID=546c25a59c58ad7
            #RIMGU_ADDRESS=rimgo.thekitty.zone

            # Instance privacy
            # For more information, see https://codeberg.org/librarian/librarian/wiki/Instance-privacy
            # Required to be on the instance list.

            # Link to a privacy policy (optional)
            PRIVACY_POLICY=thekitty.zone/about/
            # Explain how this data is used/why it is collected (optional)
            PRIVACY_MESSAGE=
            # Country where instance is located. Leave blank if running on Tor without clearnet.
            PRIVACY_COUNTRY=DE
            # Hosting provider or ISP name. Leave blank if running on Tor without clearnet.
            PRIVACY_PROVIDER= Hetzner
            # Set to true if you use Cloudflare (using Cloudflare only as DNS (gray cloud icon), set to false)
            PRIVACY_CLOUDFLARE=false

            # These settings are for NGINX without data collection disabled.
            # Instructions for other reverse proxies and to disable data collection:
            # https://codeberg.org/librarian/librarian/wiki/Instance-privacy

            # Set to true if no data is collected. (overrides all other options)
            PRIVACY_NOT_COLLECTED=false
            # IP address
            PRIVACY_IP=false
            # Request URL
            PRIVACY_URL=false
            # Device Type (User agent)
            PRIVACY_DEVICE=false
            # If the data collection is only collected when there is an error and only stored for
            # a short amount of time while diagnosing an issue.
            PRIVACY_DIAGNOSTICS=true

    persistence:
      # -- Default persistence for configuration files.
      # @default -- See below
      config:
        # -- Enables or disables the persistence item
        enabled: enabled

        # -- Sets the persistence type
        # Valid options are pvc, emptyDir, hostPath, secret, configMap or custom
        type: configMap
        name: rimgo-config
        mountPath: /app/.env
        subPath: .env
    # -- Configures service settings for the chart.
    service:
      main:
        ports:
          http:
            port: 3000
    ingress:
      # -- Enable and configure ingress settings for the chart under this key.
      main:
        enabled: false

    probes:
      # -- Liveness probe configuration
      # @default -- See below
      liveness:
        # -- Enable the liveness probe
        enabled: true
        # -- Set this to `true` if you wish to specify your own livenessProbe
        custom: true
        # -- sets the probe type when not using a custom probe
        # @default -- "TCP"
        type: TCP
        # -- The spec field contains the values for the default livenessProbe.
        # If you selected `custom: true`, this field holds the definition of the livenessProbe.
        # @default -- See below
        spec:
          httpGet:
            port: 3000
            path: /
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3

      # -- Redainess probe configuration
      # @default -- See below
      readiness:
        # -- Enable the readiness probe
        enabled: true
        # -- Set this to `true` if you wish to specify your own readinessProbe
        custom: true
        # -- sets the probe type when not using a custom probe
        # @default -- "TCP"
        type: TCP
        # -- The spec field contains the values for the default readinessProbe.
        # If you selected `custom: true`, this field holds the definition of the readinessProbe.
        # @default -- See below
        spec:
          httpGet:
            port: 3000
            path: /
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3

      # -- Startup probe configuration
      # @default -- See below
      startup:
        # -- Enable the startup probe
        enabled: true
        # -- Set this to `true` if you wish to specify your own startupProbe
        custom: true
        # -- sets the probe type when not using a custom probe
        # @default -- "TCP"
        type: TCP
        # -- The spec field contains the values for the default startupProbe.
        # If you selected `custom: true`, this field holds the definition of the startupProbe.
        # @default -- See below
        spec:
          httpGet:
            port: 3000
            path: /
          initialDelaySeconds: 15
          timeoutSeconds: 1
          ## This means it has a maximum of 5*30=150 seconds to start up before it fails
          periodSeconds: 5
          failureThreshold: 30