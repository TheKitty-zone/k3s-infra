---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: homepage-blog
  namespace: flux-system
spec:
  chart:
    spec:
      chart: app-template
      reconcileStrategy: Revision
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      version: '>=1.0.0'
  interval: 1h0m0s
  releaseName: homepage-blog
  targetNamespace: homepage-blog
  values:
    image:
      # -- image repository
      repository:  ghcr.io/thekitty/thekitty.zone
      # -- image pull policy
      pullPolicy: Always
      # -- image tag
      # this example is not automatically updated, so be sure to use the latest image
      tag: latest

    controller:
      strategy: "RollingUpdate"
      replicas: 3


    # -- Configures service settings for the chart.
    service:
      main:
        ports:
          http:
            port: 80
    ingress:
      # -- Enable and configure ingress settings for the chart under this key.
      main:
        annotations:
          kubernetes.io/ingress.class: traefik
          cert-manager.io/cluster-issuer: letsencrypt-prod
          traefik.ingress.kubernetes.io/router.middlewares: default-redirect-https@kubernetescrd
          external-dns.alpha.kubernetes.io/hostname: "@"
          external-dns.alpha.kubernetes.io/ttl: "3600" #optional
        ingressClassName: ""
        enabled: true
        hosts:
          - host: thekitty.zone
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: 80
        tls:
          - secretName: thekitty.zone-tls
            hosts:
              - thekitty.zone

    probes:
      # -- Liveness probe configuration
      # @default -- See below
      liveness:
        # -- Enable the liveness probe
        enabled: true
        # -- Set this to `true` if you wish to specify your own livenessProbe
        custom: true
        # -- sets the probe type when not using a custom probe
        # @default -- "TCP"
        type: TCP
        # -- The spec field contains the values for the default livenessProbe.
        # If you selected `custom: true`, this field holds the definition of the livenessProbe.
        # @default -- See below
        spec:
          httpGet:
            port: 80
            path: /
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3

      # -- Redainess probe configuration
      # @default -- See below
      readiness:
        # -- Enable the readiness probe
        enabled: true
        # -- Set this to `true` if you wish to specify your own readinessProbe
        custom: true
        # -- sets the probe type when not using a custom probe
        # @default -- "TCP"
        type: TCP
        # -- The spec field contains the values for the default readinessProbe.
        # If you selected `custom: true`, this field holds the definition of the readinessProbe.
        # @default -- See below
        spec:
          httpGet:
            port: 80
            path: /
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3

      # -- Startup probe configuration
      # @default -- See below
      startup:
        # -- Enable the startup probe
        enabled: true
        # -- Set this to `true` if you wish to specify your own startupProbe
        custom: true
        # -- sets the probe type when not using a custom probe
        # @default -- "TCP"
        type: TCP
        # -- The spec field contains the values for the default startupProbe.
        # If you selected `custom: true`, this field holds the definition of the startupProbe.
        # @default -- See below
        spec:
          httpGet:
            port: 80
            path: /
          initialDelaySeconds: 15
          timeoutSeconds: 1
          ## This means it has a maximum of 5*30=150 seconds to start up before it fails
          periodSeconds: 5
          failureThreshold: 30