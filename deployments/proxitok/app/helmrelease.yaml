---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: proxitok
  namespace: flux-system
spec:
  chart:
    spec:
      chart: app-template
      reconcileStrategy: Revision
      sourceRef:
        kind: HelmRepository
        name: bjw-s
      version: '>1.0.0'
  interval: 1h0m0s
  releaseName: proxitok
  targetNamespace: proxitok
  values:
    image:
      # -- image repository
      repository: ghcr.io/pablouser1/proxitok
      # -- image pull policy
      pullPolicy: Always
      # -- image tag
      # this example is not automatically updated, so be sure to use the latest image
      tag: master

    controller:
      strategy: "RollingUpdate"
      rollingUpdate:
        # -- Set deployment RollingUpdate max unavailable
        unavailable: 1
        # -- Set deployment RollingUpdate max surge
        surge: 2

      replicas: 3
    configMaps:
      config:
        # -- Enables or disables the configMap
        enabled: true
        # -- Labels to add to the configMap
        labels: {}
        # -- Annotations to add to the configMap
        annotations: {}
        # -- configMap data content. Helm template enabled.
        data:
          .env: |
            APP_URL="https://tok.thekitty.zone" # Absolute path to proxitok instance
            LATTE_CACHE="/tmp/" # Path for Latte cache, leave commented for /cache
            API_SIGNER=remote
            API_SIGNER_URL="http://signer:8080/signature"
            API_TEST_ENDPOINTS=true # Uncomment for usage of testing TikTok endpoints, may help sometimes
            API_CACHE=redis
            REDIS_HOST=redis-master # Host or path to unix socket
            REDIS_PORT=6379 # Set to -1 to use unix socket
    env:
      REDIS_PASSWORD:
        valueFrom:
            secretKeyRef:
              name: secret-redis
              key: redis_auth_key

    persistence:
      # -- Default persistence for configuration files.
      # @default -- See below
      config:
        # -- Enables or disables the persistence item
        enabled: enabled

        # -- Sets the persistence type
        # Valid options are pvc, emptyDir, hostPath, secret, configMap or custom
        type: configMap
        name: proxitok-config
        mountPath: /var/www/html/.env
        subPath: .env

    # -- Configures service settings for the chart.
    service:
      main:
        ports:
          http:
            port: 80
    ingress:
      # -- Enable and configure ingress settings for the chart under this key.
      main:
        enabled: false

    probes:
      # -- Liveness probe configuration
      # @default -- See below
      liveness:
        # -- Enable the liveness probe
        enabled: true
        # -- Set this to `true` if you wish to specify your own livenessProbe
        custom: true
        # -- sets the probe type when not using a custom probe
        # @default -- "TCP"
        type: TCP
        # -- The spec field contains the values for the default livenessProbe.
        # If you selected `custom: true`, this field holds the definition of the livenessProbe.
        # @default -- See below
        spec:
          httpGet:
            port: 80
            path: /
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3

      # -- Redainess probe configuration
      # @default -- See below
      readiness:
        # -- Enable the readiness probe
        enabled: true
        # -- Set this to `true` if you wish to specify your own readinessProbe
        custom: true
        # -- sets the probe type when not using a custom probe
        # @default -- "TCP"
        type: TCP
        # -- The spec field contains the values for the default readinessProbe.
        # If you selected `custom: true`, this field holds the definition of the readinessProbe.
        # @default -- See below
        spec:
          httpGet:
            port: 80
            path: /
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3

      # -- Startup probe configuration
      # @default -- See below
      startup:
        # -- Enable the startup probe
        enabled: true
        # -- Set this to `true` if you wish to specify your own startupProbe
        custom: true
        # -- sets the probe type when not using a custom probe
        # @default -- "TCP"
        type: TCP
        # -- The spec field contains the values for the default startupProbe.
        # If you selected `custom: true`, this field holds the definition of the startupProbe.
        # @default -- See below
        spec:
          httpGet:
            port: 80
            path: /
          initialDelaySeconds: 15
          timeoutSeconds: 1
          ## This means it has a maximum of 5*30=150 seconds to start up before it fails
          periodSeconds: 5
          failureThreshold: 30