apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: prometheus-statsd-exporter
  namespace: monitoring
spec:
  chart: prometheus-statsd-exporter
  repo: https://prometheus-community.github.io/helm-charts
  targetNamespace: monitoring
  valuesContent: |-
    image:
      repository: prom/statsd-exporter
      pullPolicy: Always
      # Overrides the image tag whose default is the chart appVersion.
      tag: "latest"

    statsd:
      # The UDP port on which to receive statsd metric lines.
      udpPort: 9125

      # The TCP port on which to receive statsd metric lines.
      tcpPort: 9125

      # Maximum size of your metric mapping cache.
      # Relies on least recently used replacement policy if max size is reached.
      cacheSize: 1000

      # Size of internal queue for processing events.
      eventQueueSize: 10000

      # Number of events to hold in queue before flushing.
      eventFlushThreshold: 1000

      # Time interval before flushing events in queue.
      eventFlushInterval: 200ms

      # Metric mapping configuration
      mappingConfig: |-
        mappings:
        - match: mastodon\.web\.Auth\.(\w+)\.(.+)
          match_type: regex
          name: "mastodon_web_auth_$1_$2"
          labels:
            controller: "$1"
            operation: "$2"
            job: "mastodon_web_auth"
        - match: mastodon\.web\.WellKnown\.(\w+)\.(.+)
          match_type: regex
          name: "mastodon_web_wellknown_$1_$2"
          labels:
            controller: "$1"
            operation: "$2"
            job: "mastodon_web_wellknown"
        - match: mastodon\.web\.Api\.(\w*\d*)\.(\w+)\.(.+)
          match_type: regex
          name: "mastodon_web_api_$1_$2_$3"
          labels:
            version: "$1"
            controller: "$2"
            operation: "$3"
            job: "mastodon_web_api"
        - match: mastodon\.web\.ActivityPub\.(\w*[Cc]ontroller\w*)\.(.+)
          match_type: regex
          name: "mastodon_web_activitypub_$1_$2"
          labels:
            controller: "$1"
            operation: "$2"
            job: "mastodon_web_activitypub"
        - match: mastodon\.web\.Admin\.(\w*[Cc]ontroller\w*)\.(.+)
          match_type: regex
          name: "mastodon_web_admin_$1_$2"
          labels:
            controller: "$1"
            operation: "$2"
            job: "mastodon_web_admin"
        - match: mastodon\.web\.Oauth\.(\w*[Cc]ontroller\w*)\.(.+)
          match_type: regex
          name: "mastodon_web_oauth_$1_$2"
          labels:
            controller: "$1"
            operation: "$2"
            job: "mastodon_web_oauth"
        - match: mastodon\.web\.PgHero\.(\w*[Cc]ontroller\w*)\.(.+)
          match_type: regex
          name: "mastodon_web_pghero_$1_$2"
          labels:
            controller: "$1"
            operation: "$2"
            job: "mastodon_web_pghero"
        - match: mastodon\.web\.Settings\.TwoFactorAuthentication\.(\w*[Cc]ontroller\w*)\.(.+)
          match_type: regex
          name: "mastodon_web_settings_twofactorauthentication_$1_$2"
          labels:
            controller: "$1"
            operation: "$2"
            job: "mastodon_web_settings_twofactorauthentication"
        - match: mastodon\.web\.Settings\.Preferences\.(\w*[Cc]ontroller\w*)\.(.+)
          match_type: regex
          name: "mastodon_web_settings_preferences_$1_$2"
          labels:
            controller: "$1"
            operation: "$2"
            job: "mastodon_web_settings_preferences"
        - match: mastodon\.web\.Settings\.(\w*[Cc]ontroller\w*)\.(.+)
          match_type: regex
          name: "mastodon_web_settings_$1_$2"
          labels:
            controller: "$1"
            operation: "$2"
            job: "mastodon_web_settings"
        - match: mastodon\.web\.(\w*[Cc]ontroller\w*)\.(.+)
          match_type: regex
          name: "mastodon_web_$1_$2"
          labels:
            controller: "$1"
            operation: "$2"
            job: "mastodon_web"
        - match: mastodon\.cache\.(.+)
          match_type: regex
          name: "mastodon_cache_$1"
          labels:
            operation: "$1"
            job: "mastodon_cache"
        - match: mastodon\.db\.(.+)
          match_type: regex
          name: "mastodon_db_$1"
          labels:
            operation: "$1"
            job: "mastodon_db"
        - match: mastodon\.sidekiq\.(.+)
          match_type: regex
          name: "mastodon_sidekiq_$1"
          labels:
            operation: "$1"
            job: "mastodon_sidekiq"

    serviceMonitor:
      enabled: true
      interval: 30s
      scrapeTimeout: 10s
      namespace: monitoring
      honorLabels: true
      # metrics exposing endpoint
      endpoint: "/metrics"

    service:
      type: ClusterIP
      # The address on which to expose the web interface and generated Prometheus metrics.
      port: 9102
      # Path under which to expose metrics.
      path: /metrics
      annotations: {}

    ingress:
      enabled: false
      className: ""
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      hosts:
        - host: chart-example.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

